name: Release

on:
  push:
    tags:
      - "*"

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
    steps:
      - uses: actions/checkout@v3

      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@7.0
        with:
          cli: 1.10.3.1075
          bb: 0.7.8

      - name: Get Version
        id: version
        run: |
          VERSION=$(bb -e "(require '[clojure.edn :as edn]) (-> (edn/read-string (slurp \"deps.edn\")) :aliases :databricks-connect-installer :project :version)")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Build uberjar
        run: |
          bb uberjar
          ls -la target/

      - name: Create binary
        run: |
          echo "Creating binary for version: $VERSION"
          ls -la target/
          cat $(which bb) target/databricks-connect-installer-${VERSION}-standalone.jar > databricks-connect-installer
          chmod +x databricks-connect-installer
        env:
          VERSION: ${{ steps.version.outputs.version }}

      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: 'databricks-connect-installer-${{ steps.version.outputs.version }}-${{ matrix.os }}.zip'
          directory: '.'
          path: 'databricks-connect-installer'

      - name: Upload Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'databricks-connect-installer-${{ steps.version.outputs.version }}-${{ matrix.os }}.zip'
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          allowUpdates: true
